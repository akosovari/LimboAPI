plugins {
    id("java")
    id("com.github.johnrengelman.shadow").version("7.1.2")
}

dependencies {
    implementation(project(":limboapi-api"))

    compileOnly("com.velocitypowered:velocity-api:3.1.2-SNAPSHOT")
    annotationProcessor("com.velocitypowered:velocity-api:3.1.2-SNAPSHOT")
    compileOnly("com.velocitypowered:velocity-proxy:3.1.2-SNAPSHOT") // From Elytrium Repo.

    // Needs for some velocity methods.
    compileOnly("io.netty:netty-codec:4.1.76.Final")
    compileOnly("io.netty:netty-handler:4.1.76.Final")
    compileOnly("it.unimi.dsi:fastutil-core:8.5.8")

    implementation("org.bstats:bstats-velocity:3.0.0")

    compileOnly("com.github.spotbugs:spotbugs-annotations:4.6.0")
}

shadowJar {
    getArchiveClassifier().set("")

    exclude("META-INF/versions/**")
    exclude("net/kyori/**")

    relocate("org.bstats", "net.elytrium.limboapi.thirdparty.org.bstats")
}

license {
    matching(includes: ["**/mcprotocollib/**"]) {
        setHeader(getRootProject().file("HEADER_MCPROTOCOLLIB.txt"))
    }
    matching(includes: ["**/LoginListener.java", "**/LoginTasksQueue.java"]) {
        setHeader(getRootProject().file("HEADER_MIXED.txt"))
    }

    setHeader(getRootProject().file("HEADER.txt"))
}

assemble.dependsOn(shadowJar)
